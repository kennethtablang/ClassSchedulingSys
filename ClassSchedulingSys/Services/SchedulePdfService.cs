// Services/SchedulePdfService.cs
using ClassSchedulingSys.Interfaces;
using ClassSchedulingSys.Models;
using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;

namespace ClassSchedulingSys.Services
{
    public class SchedulePdfService : ISchedulePdfService
    {
        public byte[] GenerateSchedulePdf(List<Schedule> schedules, string pov, string id)
        {
            var document = Document.Create(container =>
            {
                container.Page(page =>
                {
                    page.Margin(30);

                    // Header with adjusted font sizes
                    page.Header()
                        .Column(column =>
                        {
                            column.Item().Text("Philippine College of Northwestern Luzon").FontSize(28).Bold().AlignCenter();
                            column.Item().Text($"Class Schedule - {pov}: {GetPovLabel(schedules, pov, id)}")
                                .FontSize(15).SemiBold().AlignCenter();
                        });

                    // Main content table
                    page.Content().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.RelativeColumn(); // Subject
                            columns.RelativeColumn(); // Section
                            columns.RelativeColumn(); // Faculty
                            columns.RelativeColumn(); // Room
                            columns.RelativeColumn(); // Day
                            columns.ConstantColumn(80); // Time (wider for clarity)
                        });

                        // Table Header with larger text
                        table.Header(header =>
                        {
                            header.Cell().Element(CellStyle).Text("Subject").FontSize(12).SemiBold();
                            header.Cell().Element(CellStyle).Text("Section").FontSize(12).SemiBold();
                            header.Cell().Element(CellStyle).Text("Faculty").FontSize(12).SemiBold();
                            header.Cell().Element(CellStyle).Text("Room").FontSize(12).SemiBold();
                            header.Cell().Element(CellStyle).Text("Day").FontSize(12).SemiBold();
                            header.Cell().Element(CellStyle).Text("Time").FontSize(12).SemiBold();
                        });

                        // Data rows with adjusted font size
                        foreach (var s in schedules.OrderBy(s => s.Day).ThenBy(s => s.StartTime))
                        {
                            table.Cell().Element(CellStyle).Text(s.Subject?.SubjectTitle ?? "N/A").FontSize(10);
                            table.Cell().Element(CellStyle).Text($"{s.ClassSection?.CollegeCourse?.Code} {s.ClassSection?.YearLevel}{s.ClassSection?.Section} ").FontSize(10);
                            table.Cell().Element(CellStyle).Text(s.Faculty?.FullName ?? "N/A").FontSize(10);
                            table.Cell().Element(CellStyle).Text(s.Room?.Name ?? "N/A").FontSize(10);
                            table.Cell().Element(CellStyle).Text(s.Day.ToString()).FontSize(10);
                            table.Cell().Element(CellStyle).Text($"{s.StartTime} - {s.EndTime}").FontSize(10);
                        }
                    });

                    // Footer with smaller font
                    page.Footer()
                        .AlignCenter()
                        .Text(text =>
                        {
                            text.Span("Generated by ClassSchedulingSys").FontSize(8);
                        });
                });
            });

            return document.GeneratePdf();
        }

        private static IContainer CellStyle(IContainer container) =>
            container.PaddingVertical(5).PaddingHorizontal(5).BorderBottom(1).BorderColor(Colors.Grey.Lighten2);

        private string GetPovLabel(List<Schedule> schedules, string pov, string id)
        {
            return pov.ToLower() switch
            {
                "faculty" => schedules.FirstOrDefault()?.Faculty?.FullName ?? id,
                "class section" or "classsection" => schedules.FirstOrDefault()?.ClassSection?.Section ?? id,
                "room" => schedules.FirstOrDefault()?.Room?.Name ?? id,
                _ => id
            };
        }
    }
}
